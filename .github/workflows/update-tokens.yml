name: Generate design tokens

permissions:
  contents: write # Permite escrever no conteúdo (fazer push)

on:
  repository_dispatch:
    types: update-tokens

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Faz checkout para a branch update-tokens (cria a branch caso não exista)
      - name: Checkout or create update-tokens branch
        run: |
          if git rev-parse --verify update-tokens >/dev/null 2>&1; then
            git checkout update-tokens
          else
            git checkout -b update-tokens
          fi

      # Cria o JSON com o nome correto: input/tokens.json
      - name: Create input JSON
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: tokens.json
          json: ${{ github.event.client_payload.tokens }}
          dir: "input"

      # Exibe o conteúdo do arquivo JSON correto
      - name: Display design tokens
        run: cat input/tokens.json

      # Configura a identidade do Git
      - name: Configure Git user
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      # Comita o arquivo de tokens.json atualizado (somente se houver alterações)
      - name: Commit updated tokens.json
        run: |
          git status
          git add input/tokens.json
          git commit -m "update: Refresh design tokens" || echo "No changes to commit"
          git push origin update-tokens

      # Outras etapas (como instalação do Node.js, dependências, build, etc)
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      # Garantindo que as referências do repositório estejam atualizadas
      - name: Fetch all branches
        run: |
          git fetch --all
